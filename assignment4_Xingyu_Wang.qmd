---
title: "WWhich country has the most expensive diet? Is it worth what they eat?"
subtitle: "Assignment 4 ETC5512"
author: "Xingyu Wang"
format: html
editor: visual
---

::: panel-tabset
<!-- Task 1 Tab: Data and Documenting -->

## Data and Documenting

### What's in this section

Here is where you should provide the more comprehensive details about your data and your processing steps.

These are the data details that an "average" blog post reader is not concerned with (Task 1).

load the library
```{r}
#| warning: false
#| message: false

library(readr)
library(readxl)
library(tidyverse)
library(tidyr)
library(dplyr)
library(stringr)
library(janitor)
library(ggplot2)
```

Steps to download the data【需改】 
Navigate to the FAOSTAT home page. ● Click on the "Data" tab or "Explore Data" to browse available datasets. ● Select a domain (e.g., "Production") and a subsection (e.g., "Crops and livestock products"). ● Apply filters for specific countries, years, or commodities. ● Click "View" to display the data, then select "Download" to save it in formats like CSV or Excel.

License: Data is available under [the Creative Commons Attribution 4.0 International (CC BY 4.0) license](https://creativecommons.org/licenses/by/4.0/), which permits users to: ○ Share, adapt, and use the data for any purpose including commercial use as long as proper attribution is made.

load the data.

```{r}
#| warning: false
#| message: false

rd_fq <- read_csv("data/FAOSTAT_data_5s_6-10-2025.csv")
rd_fp <- read_csv("data/FAOSTAT_data_food_pice_6-13-2025.csv")
rd_fp_china <- read_csv("data/china_food_cpi.csv")
his_classif_of_regions <- read_excel("data/historical-classification-of-developed-and-developing-regions.xlsx", sheet = 2)
```

ps: 记得参考原数据。 食品价格的数据估计得求年平均，因为他给的是每个月的。

清理数据：

去除不要的

```{r}

#重复的相同的值
de_fp <- rd_fp %>%
  select(-c(`Domain Code`, `Domain`, 
            `Element Code`, `Element`, 
            `Item Code`, `Year Code`, `Note`))

de_fq <- rd_fq %>%
  select(-c(`Domain Code`, `Domain`, 
            `Element Code`, `Element`, 
            `Item Code`, `Year Code`, `Note`)) %>%
  filter(!str_detect(Year, "^\\d{4}-\\d{4}$"))   #不相符的研究时间单位

his_classif_of_regions <- his_classif_of_regions %>%
  select(c( "ISO-alpha3 Code", "Developed / Developing regions")) %>%
  rename("area_code_iso3" = "ISO-alpha3 Code",
         "classification" = "Developed / Developing regions") %>%
  mutate(area_code_iso3 = ifelse(area_code_iso3 == "CHN", "F351", area_code_iso3))  #修改中国的代码使得和粮农组织的一致
  
```


```{r}
names(his_classif_of_regions)
unique(his_classif_of_regions$classification)
```

食品价格指数（Food Price Index, FPI）
数据值处理
```{r}
#| message: false

sup_fp <- de_fp %>% 
 #补充N/A value：de_fp的Unit 列: 食品价格指数常采用拉氏指数（Laspeyres Index）计算
  replace_na(list(Unit = "laspeyres_index")) %>%
 # 计算每国每年的食品价格指数的平均值
  filter(Unit == "laspeyres_index") %>%  
  group_by(`Area Code (ISO3)`, Year) %>%       
  summarise(con_p_food_indices_year = mean(Value, na.rm = TRUE)) %>%  
  ungroup()
```

处理中国的数据基年

```{r}

rd_fp_china_2015 <- rd_fp_china %>%
  # Convert to numeric in case the column is character type
  mutate(cpi_food_numeric = as.numeric(cpi_food_based_previous_year)) %>%
  arrange(year) %>%
  # Create a new column: CPI with base year = 2015
  mutate(
    con_p_food_indices_year = {
      base_index <- which(year == 2015)   # Find the position of the base year (2015)
      index_vals <- numeric(n())   # Create a vector to store the new index values
      index_vals[base_index] <- 100      # Set 2015 as 100
    # Backward calculation (e.g., 2000–2014)
      if (base_index > 1) {
        for (i in (base_index - 1):1) {
          index_vals[i] <- index_vals[i + 1] / (cpi_food_numeric[i + 1] / 100)}}
    # Forward calculation (e.g., 2016–)
      if (base_index < n()) {
        for (i in (base_index + 1):n()) {
          index_vals[i] <- index_vals[i - 1] * (cpi_food_numeric[i] / 100)}}
      index_vals}) # Return the full vector

```


清洁数据名字以及数据类型
```{r}
de_fq_cleaned <- de_fq %>%
  clean_names() %>%
  mutate(across(c(year, value), as.numeric))

sup_fp_cleaned <- sup_fp %>%
  clean_names() 

rd_fp_china_cleaned <- rd_fp_china_2015 %>%
  select(-c("Area", "cpi_food_numeric", 
            "cpi_food_based_previous_year")) %>%
  clean_names()
```

合并数据集
```{r}
comp_fp <- bind_rows(sup_fp_cleaned, rd_fp_china_cleaned)
  
data <- de_fq_cleaned %>%
  left_join(comp_fp, by = c("area_code_iso3", "year")) %>%
  select(-c(flag_description)) %>%
  rename(food_price = con_p_food_indices_year) %>%
  left_join(his_classif_of_regions, by = "area_code_iso3")

data$classification <- as.factor(data$classification)
```

输出数据集
```{r}
#|eval: false
 
write_csv(data, "data/processed_food_data.csv")
```


limitation:
各国的核算方式随时间变化，【提及粮农组织】例如中国在计算2000的数据时，并没有把“烟草”“酒”单独列出，而是包含在了食品项下面，在2001年时则将其剔除，而在2017年时，又将二者合并计数同时分别给出数值。

### Remember

Please mention any additional files that you want the markers to review, eg. read me, meta data etc.

<!-- Task 2 Tab: Writing your blogpost -->

## Blog post

### What's in this section

Here is where you should write your blogpost! (Task 2)

### Blogpost Structure

There is no strict structure for you to follow. However, here is a skeleton structure you may find helpful.

### Title (is set at the top of this document)
### Motivation
### Data
### Analysis




```{r}
names(data)
unique(data$item)
```
画图

准备工作：
```{r}
#|message: false

country_colours <- c(
    "Australia"                = "#1116f7",
    "China"                    = "#DE2910",
    "France"                   = "#74bff4",
    "Germany"                  = "#FFCC00",
    "India"                    = "#b89aff",
    "Japan"                    = "#970502",
    "Nigeria"                  = "#008751",
    "Serbia"                   = "#6ef1e7",
    "Singapore"                = "#ff9d66",
    "South Africa"             = "#0c0c0e",
    "United States of America" = "#bfd2ec")

country_class <- c("Developing" = "solid", 
                   "Developed" = "dashed")
```

画图
```{r}
unique(data$item)
```

3.多个国家展示一个数据:

Food Price
```{r}
#去除Nigra这个异常值
plot_fp_nonni <- data %>% 
  filter(area != "Nigeria") 
#画图
ggplot(plot_fp_nonni, aes(x = year, 
                      y = food_price, 
                      color = area, 
                      linetype = classification)) +
  geom_line(size = 1) +
  labs(
    title = "Food Price (2000–2023)",
    x = "Year",
    y = "Laspeyres Index(unitless)",
    color = "Country",
    linetype = "Classification"
  ) +
  scale_color_manual(values = country_colours) +
  scale_linetype_manual(values = country_class) +
  theme_minimal() +
  theme(
    legend.position = "right",
    legend.key.width = unit(1, "cm"), 
    plot.title = element_text(hjust = 0.5)
  )
```
不同维度的指标方程式化：
```{r}
plot_itmes_in_food_quality <- function(data, plot_title, y_label) {
  ggplot(data, aes(x = year, y = value, color = area, linetype = classification)) +
    geom_line(size = 1) +
    labs(title = plot_title,
         x = "Year",
         y = y_label,
         color = "Country",
         linetype = "Classification") +
    scale_color_manual(values = country_colours) +
    scale_linetype_manual(values = country_class) +
    theme_minimal() +
    theme(legend.position = "right",
          legend.key.width = unit(1, "cm"), 
          plot.title = element_text(hjust = 0.5))}
```

.1Per capita food supply variability (kcal/cap/day)
```{r}
#数据集准备
plot_data_pfsv <- data %>%
  filter(item == "Per capita food supply variability (kcal/cap/day)")


# 绘图
plot_itmes_in_food_quality(
  data = plot_data_pfsv,
  plot_title = "Per Capita Food Supply Variability (2000–2023)",
  y_label = "Per Capita Variability(unit: kcal/cap/day)")
```

.2Average dietary energy requirement (kcal/cap/day)
```{r}
#数据集准备
plot_data_aer <- data %>%
  filter(item == "Average dietary energy requirement (kcal/cap/day)")

# 绘图
plot_itmes_in_food_quality(
  data = plot_data_aer,
  plot_title = "Average Dietary Energy Requirement (2000–2023)",
  y_label = "Average Requirement(unit: kcal/cap/day)")
```



单个国家的数据

估算缩放数值
```{r}
data %>%
  filter(area == "China",
         item == "Average dietary energy requirement (kcal/cap/day)") %>%
  summarise(
    mean_energy = mean(value, na.rm = TRUE),
    mean_price = mean(food_price, na.rm = TRUE),
    scale_factor = mean_energy / mean_price
  )
```
画图
```{r}
# 准备数据（只举例一个国家；多个国家建议 facet_wrap）
plot_china_data <- data %>%
  filter(area == "China" & 
         item == "Average dietary energy requirement (kcal/cap/day)") %>%
  select(year, energy_req = value, food_price)

# 为了使它们在图上比例差不多，我们缩放 food_price
# 比如乘上 20（也可以根据实际均值比例动态调整）
ggplot(plot_china_data, aes(x = year)) +
  geom_line(aes(y = energy_req), 
            size = 1) +
  geom_line(aes(y = food_price * 30), 
            size = 1, 
            linetype = "dashed") +
  scale_y_continuous(name = "Energy Requirement (kcal/cap/day)",
                     sec.axis = sec_axis(~ . / 30, 
                                         name = "Food Price Index (2015 = 100)")) +
  labs(title = "Energy Requirement vs Food Price in China",
       x = "Year") +
  theme_minimal() +
  theme(legend.position = "bottom")
```

挑选典型国家进行分面对比
```{r}
# 筛选出你关心的那一项
energy_req_data <- data %>%
  filter(item == "Average dietary energy requirement (kcal/cap/day)")

# 合并energy和food_price（假设在同一行，不需要 reshape）
plot_er <- energy_req_data %>%
  select(area, year, value, food_price) %>%
  rename(energy_req = value)

# 画图
ggplot(plot_er, aes(x = year)) +
  geom_line(aes(y = energy_req, color = "Energy Requirement")) +
  geom_line(aes(y = food_price, color = "Food Price")) +
  facet_wrap(~ area) +
  labs(x = "Year", y = "Value", color = "Indicator",
       title = "Trends of Energy Requirement and Food Price Over Time") +
  theme_minimal()
```



### Conclusions



### References

National Bureau of Statistics of China. (2001). China Statistical Yearbook 2001. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2002). China Statistical Yearbook 2002. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2003). China Statistical Yearbook 2003. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2004). China Statistical Yearbook 2004. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2005). China Statistical Yearbook 2005. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2006). China Statistical Yearbook 2006. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2007). China Statistical Yearbook 2007. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2008). China Statistical Yearbook 2008. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2009). China Statistical Yearbook 2009. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2010). China Statistical Yearbook 2010. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2011). China Statistical Yearbook 2011. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2012). China Statistical Yearbook 2012. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2013). China Statistical Yearbook 2013. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2014). China Statistical Yearbook 2014. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2015). China Statistical Yearbook 2015. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2016). China Statistical Yearbook 2016. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2017). China Statistical Yearbook 2017. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2018). China Statistical Yearbook 2018. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2019). China Statistical Yearbook 2019. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2020). China Statistical Yearbook 2020. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2021). China Statistical Yearbook 2021. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2022). China Statistical Yearbook 2022. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2023). China Statistical Yearbook 2023. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/
National Bureau of Statistics of China. (2024). China Statistical Yearbook 2024. China Statistics Press. https://www.stats.gov.cn/sj/ndsj/















<!-- Task 3 Tab: Behind the Scenes -  -->

## Behind the Scenes

Find out the history version in my [git repository](https://github.com/Acrea-QwQ/5512_Assignment_4_XyW.git).

### What's in this section

补充中国的food price数据花了好久的时间，因为数据是以图片形式呈现的，无法进行抓取

Here is where you should tell us about your reflection on your analysis (Task 3).

Again, these are the details about **your** perspective and the gritty details behind the scenes of your analysis.
:::
